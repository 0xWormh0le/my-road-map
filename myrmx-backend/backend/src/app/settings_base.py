"""
Django settings for My Roadmap project.
Generated by 'django-admin startproject' using Django 1.10.1.
For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/
For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""
import os

from django.contrib.messages import constants as messages


IS_AWS = 'IS_AWS' in os.environ

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Application definition

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('SECRET_KEY', '1snmkbf45ed9gpygcye_+w#xoafwrndxl*n8wb1$)41d8kj+^7')

# AWS account ID for bounced email verification
AWS_ACCOUNT_ID = '314361955913'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = not IS_AWS

ADMINS = [
    ('John', 'john@modernmasters.org'),
    ('Kollyn', 'kollyn@myroadmap.io'),
    ('Daniel', 'daniel.ivanov@toptal.com'),
]
MANAGERS = ADMINS

ALLOWED_HOSTS = []

INSTALLED_APPS = [
    'boolean_switch',
    'ckeditor',
    'ckeditor_uploader',
    'crispy_forms',
    'notifications',
    'dashboard.apps.DashboardConfig',
    'django_bootstrap_breadcrumbs',
    'django_crontab',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.humanize',
    'django.contrib.messages',
    'django.contrib.sessions',
    'django.contrib.sites',
    'django.contrib.staticfiles',
    'embed_video',
    'login',
    'postman',
    'signup',
    'push_notifications',
    'rest_framework',
    'rest_framework.authtoken',
    'django_filters',
    'multiselectfield',
    # 'django_user_agents',
    'api',
    'corsheaders',
]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        # 'api.authentication.ExpiringTokenAuthentication',
        # TODO: Replace with ExpiringTokenAuthentication (commented out above) for better security
        'rest_framework.authentication.TokenAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
        'api.permissions.ApprovedUserPermission',
    ),
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 100,
    'DEFAULT_FILTER_BACKENDS': [
        'django_filters.rest_framework.DjangoFilterBackend',
        'rest_framework.filters.SearchFilter',
    ],
}

REST_AUTH_SERIALIZERS = {
    'PASSWORD_RESET_SERIALIZER': 'api.serializers.CustomPasswordResetSerializer',
    'TOKEN_SERIALIZER': 'api.serializers.LogInResponseSerializer',
    'LOGIN_SERIALIZER': 'api.serializers.LogInRequestSerializer',
}

PUSH_NOTIFICATIONS_SETTINGS = {
    "FCM_API_KEY": "AAAANsoojaE:APA91bFgvtqll8o6Ev6V6BRMrPfU-cltYcYTrMel-DcezIMTLQkaHiOX6SPeVYWjAQ_AAfq9ktdsULBldFakEUL-bVKXXcSlJOF-hrrScqEokKxw7AJFFp0CU3theCDRROAJYf7zVdyl",
    "WP_PRIVATE_KEY": os.path.join(BASE_DIR, "private_key.pem"),
    "WP_CLAIMS": {"sub": "mailto: kollyn@myroadmap.io"}
}

MIDDLEWARE = [
    #'debug_toolbar.middleware.DebugToolbarMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'dashboard.middleware.LastSeenMiddleware',
    # 'dashboard.middleware.PostmanCompanyMiddleware',
    # 'django_user_agents.middleware.UserAgentMiddleware',
]

ROOT_URLCONF = 'app.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.template.context_processors.static',
                'django.contrib.messages.context_processors.messages',
                'postman.context_processors.inbox',
                'dashboard.context_processors.user_groups',
                'dashboard.context_processors.main_nav',
                'dashboard.context_processors.is_mobile',
                'dashboard.context_processors.private_company',
                'dashboard.context_processors.request_user_company_has_dark_ui',
                'dashboard.context_processors.staging_banner',
            ],
        },
    },
]

# Google
GOOGLE_CLIENT_ID_DEV = '911667029309-6iorbbakuu58ia6ksv9g5mpl95lnodor.apps.googleusercontent.com'
GOOGLE_CLIENT_ID_PROD = '911667029309-su3a6b08pjpbu4tu3nvnfec9k5jgp64v.apps.googleusercontent.com'
GOOGLE_CLIENT_ID_IOS = '911667029309-tu28ougn6uvpvqh8t6ec8oht2b9tu5ii.apps.googleusercontent.com'
GOOGLE_CLIENT_ID_IOS_ASCENSION = '911667029309-hbitu90s0m6ij0q07tm1tma9ja74qi9v.apps.googleusercontent.com'

GOOGLE_API_KEY = 'AIzaSyBvwwKv8AdjtKskoW9x8dsRYuWllTh4cjY'

GOOGLE_CLIENT_IDS = [GOOGLE_CLIENT_ID_DEV, GOOGLE_CLIENT_ID_PROD, GOOGLE_CLIENT_ID_IOS, GOOGLE_CLIENT_ID_IOS_ASCENSION]

ONE_DAY = 24*60*60
SESSION_COOKIE_AGE = 10 * 365 * ONE_DAY  # 10 years

# TODO: It's better to avoid keeping DB_PASSWORD and other sensitive credentials in VCS
if IS_AWS:
    DB_HOST = 'myroadmap.ctjcjmoezibl.us-west-2.rds.amazonaws.com'
    DB_PASSWORD = 'MRamazon1!'
    FB_APP_ID = '203167350571880'
    FB_APP_SECRET = '526b4036a86b12b78752f8ba2d1319e5'
    GOOGLE_CLIENT_ID = GOOGLE_CLIENT_ID_PROD
    # So Django can tell whether a request is secure
    SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
else:
    DB_HOST = 'localhost'
    DB_PASSWORD = '123'
    FB_APP_ID = '370213086878640'
    FB_APP_SECRET = 'e7fbd15b75ef262179854d25f66383ac'
    GOOGLE_CLIENT_ID = GOOGLE_CLIENT_ID_DEV

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',  # Add 'postgresql_psycopg2', 'mysql', 'sqlite3' or 'oracle'.
        'NAME': 'myroadmap',  # Or path to database file if using sqlite3.
        # The following settings are not used with sqlite3:
        'USER': 'myroadmap',
        'PASSWORD': DB_PASSWORD,
        'HOST': DB_HOST,  # Empty for localhost through domain sockets or '127.0.0.1' for localhost through TCP.
        'PORT': '',  # Set to empty string for default.
        'OPTIONS': {'charset': 'utf8mb4'},
    }
}

if IS_AWS:
    DATABASES['readonly'] = {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'myroadmap',
        'USER': 'myroadmap_limited',
        'PASSWORD': 'kvzDMPioQvDaogNXB2KU',
        'HOST': 'myroadmap.ctjcjmoezibl.us-west-2.rds.amazonaws.com',
        'PORT': '',
        'OPTIONS': {'charset': 'utf8mb4'},
    }

WSGI_APPLICATION = 'app.wsgi.application'

# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

AUTHENTICATION_BACKENDS = [
    'login.backends.EmailBackend',
]

# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/

LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'America/Denver'
USE_I18N = True
USE_L10N = True
USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/

STATIC_ROOT = 'static'
STATIC_URL = '/static/'
STATICFILES_STORAGE = 'django.contrib.staticfiles.storage.ManifestStaticFilesStorage'

MEDIA_ROOT = '/home/myroadmap/webapps/myroadmap_media/'
MEDIA_URL = '/media/'

# ADMIN_MEDIA_ROOT = '/home/myroadmap/webapps/myroadmap_static/admin/'
# ADMIN_MEDIA_PREFIX = '/static/admin/'

# STATICFILES_DIRS = [
#     os.path.join(BASE_DIR, 'static'),
#     'static',
# ]

AUTH_USER_MODEL = 'dashboard.User'
LOGIN_URL = '/login/'
PASSWORD_RESET_TIMEOUT_DAYS = 30

EMAIL_HOST = 'email-smtp.us-west-2.amazonaws.com'
EMAIL_PORT = 587
EMAIL_HOST_USER = 'AKIAIVJP5ZXEAHWF3V3Q'
EMAIL_HOST_PASSWORD = 'AlAuCjMtOMjxYc4Ex0/2jQ70xiUVI+RnEXLldR2Pa2be'
EMAIL_USE_TLS = True
DEFAULT_FROM_EMAIL = 'MyRoadmap <support@myroadmap.io>'
SERVER_EMAIL = 'server@myroadmap.io'

EMAIL_BACKEND = 'dashboard.backends.ThrottlingAwareSmtpEmailBackend'

INTERNAL_IPS =[
    "127.0.0.ONE",
]

MESSAGE_LEVEL = messages.DEBUG

MESSAGE_TAGS = {
    messages.DEBUG: 'info',
    messages.INFO: 'info',
    messages.SUCCESS: 'success',
    messages.WARNING: 'warning',
    messages.ERROR: 'danger',
}

SITE_ID = 1

PROJECT_DIR = os.path.dirname(os.path.abspath(__file__))

# Postman options
POSTMAN_DISALLOW_ANONYMOUS = True
POSTMAN_DISABLE_USER_EMAILING = True
POSTMAN_DISALLOW_MULTIRECIPIENTS = True
POSTMAN_AUTO_MODERATE_AS = True
POSTMAN_NOTIFIER_APP = 'notifications'
# POSTMAN_SHOW_USER_AS = "user"

RECAPTCHA_SECRET_KEY = '6Lc8WVwUAAAAAE-haWdvXMOV8YFRmYpkA_TO_XZW'

DEFAULT_FILE_STORAGE = 'dashboard.storage.S3Storage'
AWS_REGION = 'us-west-2'
# make items private
AWS_S3_BUCKET_AUTH = True

if IS_AWS:
    AWS_PROFILE_NAME = None
    CRONTAB_COMMAND_PREFIX = 'source /opt/python/current/env;'
else:
    AWS_PROFILE_NAME = 'myroadmap'

if IS_AWS:
    handlers = ['file', 'mail_admins']
else:
    handlers = ['console']

log_level = os.getenv('DJANGO_LOG_LEVEL', 'INFO')

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '%(levelname)s %(asctime)s %(module)s %(process)d %(thread)d %(message)s'
        },
        'simple': {
            'format': '%(levelname)s %(message)s'
        },
    },
    'filters': {
        'require_debug_true': {
            '()': 'django.utils.log.RequireDebugTrue',
        },
    },
    'handlers': {
        'console': {
            'level': 'DEBUG',
            'filters': ['require_debug_true'],
            'class': 'logging.StreamHandler',
            'formatter': 'verbose'
        },
        'mail_admins': {
            'level': 'ERROR',
            'class': 'django.utils.log.AdminEmailHandler',
            'include_html': True,
            'formatter': 'verbose'
        },
        'null': {
            'level': 'DEBUG',
            'class': 'logging.NullHandler',
        },
    },
    'loggers': {
        # Override level on django.template because DEBUG causes a bunch of junk logs
        'django.template': {
            'handlers': handlers,
            'level': 'INFO',
            'propagate': False,
        },
        'django.security.DisallowedHost': {
            'handlers': ['null'],
            'propagate': False,
        },
        'django': {
            'handlers': handlers,
            'level': log_level,
        },
        'django.request': {
            'handlers': handlers,
            'level': 'ERROR',
            'propagate': False,
        },
        'dashboard': {
            'handlers': handlers,
            'level': log_level,
        },
        'dashboard.signals': {
            'handlers': handlers,
            'level': log_level,
            'propagate': False,
        },
        'notifications': {
            'handlers': handlers,
            'level': log_level,
        },
    },
}

if IS_AWS:
    LOGGING['handlers']['file'] = {
        'level': 'DEBUG',
        'class': 'logging.handlers.RotatingFileHandler',
        'filename': '/var/log/app-logs/app.log',
    }

# CKEDITOR_CONFIGS = {
#     'default': {
#             'skin': 'moono-dark',
#             'toolbar': 'Custom',
#             'toolbar_Custom': [
#                 ['Styles', 'Format'],
#                 ['Bold', 'Italic', 'Underline'],
#                 ['NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-', 'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock'],
#                 ['Link', 'Unlink'],
#                 ['RemoveFormat', 'Source'],
#                 ['Undo', 'Redo'],
#                 ['Maximize'],
#                 {'name': 'insert',
#              'items': ['Image', 'Table', 'HorizontalRule', 'Smiley', 'SpecialChar', 'PageBreak', 'Iframe']},
#             ]
#                 },
# }

CKEDITOR_CONFIGS = {
    'default': {
        'allowedContent': True,
        'embed_provider': '/embed/?url={url}&callback={callback}',
        'toolbar': 'roadmap',
        'toolbar_roadmap': [
            {'name': 'basicstyles',
             'items': ['Bold', 'Italic', 'Underline','RemoveFormat']},
            {'name': 'paragraph',
             'items': ['NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-', 'Blockquote', '-',
                       'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock']},
            {'name': 'links', 'items': ['Link', 'Unlink']},
            {'name': 'insert',
             'items': ['Image', 'Table', 'HorizontalRule', 'SpecialChar','EmbedBase', 'Embed', 'Iframe', 'Scayt' ]},
            '/',
            {'name': 'styles', 'items': ['Styles', 'Format', 'Font', 'FontSize']},
            {'name': 'colors', 'items': ['TextColor', 'BGColor']},
            {'name': 'document', 'items': ['Source']},
        ],
        'filebrowserUploadUrl': '/ckeditor/upload/?',
        'colorButton_colors': 'ffffff,333333,FFDB20,20D37D,F74403,A768B6,3c9dc4,60BCD8,8cc3be,C7DC69,D6D9D0,F5EFED',
        'extraPlugins': ','.join([
            'uploadimage',
            'autolink',
            'embedbase',
            'embed',
            'autoembed',
            'embedsemantic',
            'autogrow',
            'widget',
            'lineutils',
            'clipboard',
            'dialog',
            'dialogui',
            'elementspath'
        ]),
    }
}

CKEDITOR_RESTRICT_BY_USER = True
CKEDITOR_UPLOAD_PATH = "uploads/"
CKEDITOR_STORAGE_BACKEND = 'dashboard.storage.PublicS3Storage'

CRISPY_TEMPLATE_PACK = 'bootstrap3'

CRONJOBS = []

# CORS

CORS_URLS_REGEX = r'^/api/.*$'

# Agora

AGORA_APP_ID = "43285ba263cd4f13b807920bd1a95a91"
AGORA_APP_CERTIFICATE = "533efb21ae74420e835dfe9f096bc865"

# Misc

DISPLAY_STAGING_BANNER = False
